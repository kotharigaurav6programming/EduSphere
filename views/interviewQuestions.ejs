<!DOCTYPE html>
<html lang="en">

<head>
    <base href="/">
    <title>EduSphere</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">


    <link href="https://fonts.googleapis.com/css?family=Muli:300,400,700,900" rel="stylesheet">
    <link rel="stylesheet" href="fonts/icomoon/style.css">

    <link rel="stylesheet" href="css/bootstrap.min.css">
    <link rel="stylesheet" href="css/jquery-ui.css">
    <link rel="stylesheet" href="css/owl.carousel.min.css">
    <link rel="stylesheet" href="css/owl.theme.default.min.css">
    <link rel="stylesheet" href="css/owl.theme.default.min.css">

    <link rel="stylesheet" href="css/jquery.fancybox.min.css">

    <link rel="stylesheet" href="css/bootstrap-datepicker.css">

    <link rel="stylesheet" href="fonts/flaticon/font/flaticon.css">

    <link rel="stylesheet" href="css/aos.css">

    <link rel="stylesheet" href="css/style.css">
    <style>
        .stars {
            font-size: 20px;
            display: flex;
            gap: 5px;
        }

        .star {
            color: white;
            /* Empty star */
            -webkit-text-stroke: 2px black;
            /* Black outline */
        }

        .star.filled {
            color: black;
            /* Filled star */
        }
    </style>

</head>

<body data-spy="scroll" data-target=".site-navbar-target" data-offset="300">

    <div class="site-wrap">

        <div class="site-mobile-menu site-navbar-target">
            <div class="site-mobile-menu-header">
                <div class="site-mobile-menu-close mt-3">
                    <span class="icon-close2 js-menu-toggle"></span>
                </div>
            </div>
            <div class="">
                <ul class="m-0 p-2">
                  <li><a href="/" class="nav-link">Home</a></li>
                  <li><a href="" class="nav-link">Courses</a></li>
                  <li><a href="/interviewSubject" class="nav-link">InterviewPrep</a></li>
                  <li><a href="/blog" class="nav-link">Blog</a></li>
                  <li><a href="/employee/employeeLogin" class="nav-link">Employee</a></li>
                </ul>
              </div>
        </div>


        <header class="site-navbar py-4 js-sticky-header site-navbar-target" role="banner">

            <div class="container-fluid">
                <div class="d-flex align-items-center">
                    <div class="site-logo mr-auto w-25"><a href="index.html">EduSphere</a></div>

                    <div class="mx-auto text-center">
                        <nav class="site-navigation position-relative text-right" role="navigation">
                            <ul class="site-menu main-menu js-clone-nav mx-auto d-none d-lg-block  m-0 p-0">
                                <li><a href="#home-section" class="nav-link">Home</a></li>
                                <li><a href="#courses-section" class="nav-link">Courses</a></li>
                                <li><a href="/interviewSubject" class="nav-link">InterviewPrep</a></li>
                                <li><a href="/blog" class="nav-link">Blog</a></li>
                                <li><a href="/employee/employeeLogin" class="nav-link">Employee</a></li>
                            </ul>
                        </nav>
                    </div>

                    <div class="ml-auto w-25">
                        <nav class="site-navigation position-relative text-right" role="navigation">
                            <ul
                                class="site-menu main-menu site-menu-dark js-clone-nav mr-auto d-none d-lg-block m-0 p-0">
                                <li class="cta"><a href="#contact-section" class="nav-link"><span>Contact Us</span></a>
                                </li>
                            </ul>
                        </nav>
                        <a href="#"
                            class="d-inline-block d-lg-none site-menu-toggle js-menu-toggle text-black float-right"><span
                                class="icon-menu h3"></span></a>
                    </div>
                </div>
            </div>

        </header>


        <div class="site-section" id="teachers-section" style="margin-top: -1px;">
            <div class="container">

                <div class="row justify-content-center">
                    <div class="col-lg-7 mb-5 text-center" data-aos="fade-up" data-aos-delay="">
                        <br><br>
                        <h4 class="text-black">Interview Questions & Answers | ReactJS</h4>
                    </div>
                </div>

                <div class="p-5 text-black" data-aos="fade-up" data-aos-delay="">
                    <h5>1. What are React Components?</h5>
                    <p style="text-align: justify;">React components are the building blocks of a React application.
                        They encapsulate logic and UI elements, making code reusable and maintainable. There are two
                        types: functional and class components. Functional components are simpler, using hooks like
                        useState and useEffect to manage state and side effects. Class components, which extend
                        React.Component, use lifecycle methods such as componentDidMount and setState for state
                        management.</p>
                    <p><b>Company Name : Accenture</b></p>

                    <!-- star rating starts-->
                    <div class="stars">
                        <b>Frequency : </b>
                        <span class="star" data-value="1">&#9733;</span>
                        <span class="star" data-value="2">&#9733;</span>
                        <span class="star" data-value="3">&#9733;</span>
                        <span class="star" data-value="4">&#9733;</span>
                        <span class="star" data-value="5">&#9733;</span>
                    </div>
                    <!-- star rating ends -->
                </div>
                <hr data-aos="fade-up" data-aos-delay="">
                <div class="p-5 text-black" data-aos="fade-up" data-aos-delay="">
                    <h5>2. What is JSX?</h5>
                    <p style="text-align: justify;">JSX (JavaScript XML) is a syntax extension for JavaScript used in
                        React to describe UI structures in a syntax similar to HTML. It allows developers to write
                        HTML-like code directly inside JavaScript, making UI development more intuitive. JSX gets
                        compiled into standard JavaScript using Babel before being rendered in the browser. It supports
                        embedding JavaScript expressions using curly braces ({}), enabling dynamic content rendering.
                    </p>
                    <p><b>Company Name : Wipro</b></p>
                    <!-- star rating starts-->
                    <div class="stars">
                        <b>Frequency : </b>
                        <span class="star" data-value="1">&#9733;</span>
                        <span class="star" data-value="2">&#9733;</span>
                        <span class="star" data-value="3">&#9733;</span>
                        <span class="star" data-value="4">&#9733;</span>
                        <span class="star" data-value="5">&#9733;</span>
                    </div>
                    <!-- star rating ends -->

                </div>
                <hr data-aos="fade-up" data-aos-delay="">
                <div class="p-5 text-black" data-aos="fade-up" data-aos-delay="">
                    <h5>3. What is the Virtual DOM?</h5>
                    <p style="text-align: justify;">The Virtual DOM (VDOM) is a lightweight JavaScript representation of
                        the actual DOM. React uses it to optimize performance by reducing direct manipulations of the
                        real DOM, which are slow and expensive. When a componentâ€™s state changes, React creates a new
                        Virtual DOM tree and compares it with the previous one using a process called reconciliation.
                        Only the changed parts are updated in the real DOM, improving efficiency.</p>
                    <p><b>Company Name : TCS</b></p>
                    <!-- star rating starts-->
                    <div class="stars">
                        <b>Frequency : </b>
                        <span class="star" data-value="1">&#9733;</span>
                        <span class="star" data-value="2">&#9733;</span>
                        <span class="star" data-value="3">&#9733;</span>
                        <span class="star" data-value="4">&#9733;</span>
                        <span class="star" data-value="5">&#9733;</span>
                    </div>
                    <!-- star rating ends -->

                </div>
                <hr data-aos="fade-up" data-aos-delay="">
                <div class="p-5 text-black" data-aos="fade-up" data-aos-delay="">
                    <h5>4. Explain React Hooks?</h5>
                    <p style="text-align: justify;">React Hooks are functions that let developers use state and
                        lifecycle features in functional components, eliminating the need for class components.
                        Introduced in React 16.8, hooks like useState and useEffect enable managing component state and
                        side effects efficiently. Custom hooks can be created for reusable logic.</p>
                    <p><b>Company Name : Infosys</b></p>
                    <!-- star rating starts-->
                    <div class="stars">
                        <b>Frequency : </b>
                        <span class="star" data-value="1">&#9733;</span>
                        <span class="star" data-value="2">&#9733;</span>
                        <span class="star" data-value="3">&#9733;</span>
                        <span class="star" data-value="4">&#9733;</span>
                        <span class="star" data-value="5">&#9733;</span>
                    </div>
                    <!-- star rating ends -->

                </div>
                <hr data-aos="fade-up" data-aos-delay="">
                <div class="p-5 text-black" data-aos="fade-up" data-aos-delay="">
                    <h5>5. What is useState Hook?</h5>
                    <p style="text-align: justify;">useState is a React Hook that enables functional components to
                        manage state. It takes an initial state as an argument and returns an array with two elements:
                        the current state value and a function to update it. This hook allows components to store and
                        modify values without needing class components.useState is particularly useful for handling UI
                        interactions like form inputs, toggling elements, and managing counters. Multiple state
                        variables can be declared within the same component.</p>
                    <p><b>Company Name : Yash Technologies</b></p>
                    <!-- star rating starts-->
                    <div class="stars">
                        <b>Frequency : </b>
                        <span class="star" data-value="1">&#9733;</span>
                        <span class="star" data-value="2">&#9733;</span>
                        <span class="star" data-value="3">&#9733;</span>
                        <span class="star" data-value="4">&#9733;</span>
                        <span class="star" data-value="5">&#9733;</span>
                    </div>
                    <!-- star rating ends -->

                </div>
            </div>
        </div>

        <footer class="footer-section bg-white">
            <div class="container">
                <div class="row">
                    <div class="col-md-4">
                        <h3>About EduSphere</h3>
                        <p>EduSphere symbolizes a comprehensive and modern educational ecosystem. The name blends "Edu"
                            (education)
                            and "Sphere" (a complete environment) to represent inclusive, tech-driven, and global
                            learning
                            opportunities.</p>
                    </div>

                    <div class="col-md-3 ml-auto">
                        <h3>Links</h3>
                        <ul class="list-unstyled footer-links">
                            <li><a href="#">Home</a></li>
                            <li><a href="#">Courses</a></li>
                            <li><a href="#">Programs</a></li>
                            <li><a href="#">Teachers</a></li>
                        </ul>
                    </div>

                    <div class="col-md-4">
                        <h3>Subscribe</h3>
                        <p>It is catchy, brand-friendly, and ideal for scaling in the education sector.</p>
                        <form action="#" class="footer-subscribe">
                            <div class="d-flex mb-5">
                                <input type="text" class="form-control rounded-0" placeholder="Email">
                                <input type="submit" class="btn btn-primary rounded-0" value="Subscribe">
                            </div>
                        </form>
                    </div>

                </div>

                <div class="row pt-1 mt-1 text-center">
                    <div class="col-md-12">
                        <div class="border-top pt-1">
                            <p>
                                Copyright &copy;
                                <script>document.write(new Date().getFullYear());</script> All rights reserved | Created
                                By GK &trade;
                            </p>
                        </div>
                    </div>

                </div>
            </div>
        </footer>



    </div> <!-- .site-wrap -->


    <!-- Owl Carousel and jQuery Script -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/OwlCarousel2/2.3.4/assets/owl.carousel.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/OwlCarousel2/2.3.4/owl.carousel.min.js"></script>

    <script>
        $(document).ready(function () {
            const $carousel = $('.owl-carousel');

            $carousel.owlCarousel({
                items: 2,
                loop: true,
                margin: 20,
                autoplay: true,
                autoplayTimeout: 5000,
                nav: false,
                dots: false,
                responsive: {
                    0: { items: 1 },
                    768: { items: 2 }
                }
            });

            // Custom navigation buttons
            $('.customPrevBtn').click(function () {
                $carousel.trigger('prev.owl.carousel');
            });

            $('.customNextBtn').click(function () {
                $carousel.trigger('next.owl.carousel');
            });
        });
    </script>

    <script src="js/jquery-3.3.1.min.js"></script>
    <script src="js/jquery-migrate-3.0.1.min.js"></script>
    <script src="js/jquery-ui.js"></script>
    <script src="js/popper.min.js"></script>
    <script src="js/bootstrap.min.js"></script>
    <script src="js/owl.carousel.min.js"></script>
    <script src="js/jquery.stellar.min.js"></script>
    <script src="js/jquery.countdown.min.js"></script>
    <script src="js/bootstrap-datepicker.min.js"></script>
    <script src="js/jquery.easing.1.3.js"></script>
    <script src="js/aos.js"></script>
    <script src="js/jquery.fancybox.min.js"></script>
    <script src="js/jquery.sticky.js"></script>


    <script src="js/main.js"></script>
    <script>
        // typed characters
        // Array of dynamic text content
        const messages = [
            "MERN STACK",
            "Python with AI/ML",
            "JAVA STACK",
            "DATA ANALYTICS",
            "POWER BI",
            "C | C++"
        ];

        const outputElement = document.getElementById('output');
        let messageIndex = 0; // Track current message
        let charIndex = 0; // Track current character

        function printCharacter() {
            const text = messages[messageIndex]; // Get the current message
            if (charIndex < text.length) {
                const span = document.createElement('span');
                span.textContent = text.charAt(charIndex);
                span.classList.add('fade-in');
                outputElement.appendChild(span);
                charIndex++;
                setTimeout(printCharacter, 100); // Delay for the next character
            } else {
                setTimeout(() => {
                    outputElement.textContent = ''; // Clear the output
                    charIndex = 0; // Reset the character index
                    messageIndex = (messageIndex + 1) % messages.length; // Move to the next message
                    printCharacter(); // Restart printing with the new message
                }, 2000); // Pause before switching to the next message
            }
        }

        printCharacter(); // Start the printing process
    </script>

    <!-- canvas scripts starts -->
    <script>
        const canvas = document.getElementById("particleCanvas");
        const ctx = canvas.getContext("2d");
        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;

        let particlesArray = [];
        const mouse = {
            x: null,
            y: null
        };

        window.addEventListener("mousemove", (event) => {
            mouse.x = event.x;
            mouse.y = event.y;
            // Add fewer particles per mouse movement
            for (let i = 0; i < 2; i++) {
                particlesArray.push(new Particle());
            }
        });

        class Particle {
            constructor() {
                this.x = mouse.x;
                this.y = mouse.y;
                this.size = Math.random() * 4 + 1;
                this.speedX = (Math.random() - 0.5) * 1;  // Reduced speed
                this.speedY = (Math.random() - 0.5) * 1;
                this.color = `rgba(255, 255, 255, ${Math.random() * 0.7 + 0.3})`;
            }

            update() {
                this.x += this.speedX;
                this.y += this.speedY;
                if (this.size > 0.2) this.size -= 0.01; // Slower shrinking
            }

            draw() {
                ctx.fillStyle = this.color;
                ctx.beginPath();
                ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);
                ctx.fill();
            }
        }

        function handleParticles() {
            for (let i = 0; i < particlesArray.length; i++) {
                particlesArray[i].update();
                particlesArray[i].draw();

                for (let j = i; j < particlesArray.length; j++) {
                    const dx = particlesArray[i].x - particlesArray[j].x;
                    const dy = particlesArray[i].y - particlesArray[j].y;
                    const distance = Math.sqrt(dx * dx + dy * dy);
                    if (distance < 70) { // Increased minimum distance for fewer connections
                        ctx.beginPath();
                        ctx.strokeStyle = particlesArray[i].color;
                        ctx.lineWidth = 0.1;
                        ctx.moveTo(particlesArray[i].x, particlesArray[i].y);
                        ctx.lineTo(particlesArray[j].x, particlesArray[j].y);
                        ctx.stroke();
                    }
                }
                if (particlesArray[i].size <= 0.2) {
                    particlesArray.splice(i, 1);
                    i--;
                }
            }
        }

        function animate() {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            handleParticles();
            requestAnimationFrame(animate);
        }

        animate();

        window.addEventListener("resize", () => {
            canvas.width = window.innerWidth;
            canvas.height = window.innerHeight;
        });
    </script>
    <!-- canvas script ends -->
    <!-- star rating script starts-->
    <script>
        // Simulated Database Rating Value (This will come dynamically from your backend)
        let databaseRating = 4; // Example: Fetch from API or Backend (1 to 5)

        function setRating(rating) {
            document.querySelectorAll('.star').forEach(star => {
                let starValue = parseInt(star.getAttribute('data-value'));
                star.classList.toggle('filled', starValue <= rating);
            });
        }

        // Set stars dynamically based on database value
        setRating(databaseRating);
    </script>

    <!-- star rating script ends -->

</body>

</html>